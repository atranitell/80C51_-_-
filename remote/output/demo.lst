C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DEMO
OBJECT MODULE PLACED IN .\output\demo.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\demo.c LARGE OMF2 BROWSE DEBUG PRINT(.\output\demo.lst) OBJECT(.\out
                    -put\demo.obj)

line level    source

   1          //                                 MCU工作频率5.5296MHz
   2          //=========================================================================
   3          //1、如果需要更改工作频率，请修改本工程中的config.h头文件中 MAIN_Fosc的宏定义，
   4          //   延时函数都会保持一致，无需更改延迟的参数。
   5          //2、波特率为2400，如果需要更改，必须和STC-ISP最低波特率保持一致才能实现自动下载
   6          //3、IO口已被重新定义，STC15W4K58S4最大封装为64脚，具有62个IO口，其中有8个模拟口，
   7          //   当然模拟口也可用作数字口，数字用D表示，模拟用A来表示，此定义专门为STC15W4K58S4
   8          //   定义的IO，方便方便以后大家日后的使用，此定义方法类似arduino。
   9          //   使用数字IO口时，定义如下：
  10          //   P3.0-P3.7--->D0-D7   也可以直接使用0-7
  11          //   P2.0-P2.7--->D8-D15  也可以直接使用8-15
  12          //   P4.0-P4.7--->D16-D23 也可以直接使用16-23
  13          //   P5.0-P5.7--->D24-D31 也可以直接使用24-31
  14          //   P6.0-P6.7--->D32-D39 也可以直接使用32-39
  15          //   P7.0-P7.7--->D40-D47 也可以直接使用40-47
  16          //   P0.0-P0.7--->D48-D55 也可以直接使用48-55
  17          //   P1.0-P1.7--->D56-D63 也可以直接使用56-63 也可以使用A0-A7
  18          //   使用模拟IO口时，定义如下：
  19          //   P1.0-P1.7--->0-7
  20          //4、pinMode、digitalWrite必须使用数字IO定义方法，analogRead必须使用模拟IO定义方法
  21          //5、其他库函数用法请参考《STCunio入门基础》
  22          //=============================================================================
  23          #include "config.h"
  24          #include "usart.h"
  25          #include "GPIO.h"
  26          #include "delay.h"
  27          #include "adc.h"
  28          #include "spi.h"
  29          #include <stdio.h>
  30          #include <string.h>
  31          #include "NRF24L01.H"
  32          #include "12864.h"
  33          #include "pitches.h"
  34          #include "eInterrupt.h"
  35          #include "menu.h"
  36          
  37          #define blueled 28
  38          #define redled  29
  39          
  40          #define Forward  23
  41          #define Backward 61
  42          #define Left     62
  43          #define Right    63
  44          
  45          #define LKEY  21
  46          #define RKEY  18
  47          
  48          #define IRQ  2
  49          #define MISO 11
  50          #define MOSI 10
  51          #define SCK  9
  52          #define CSN  20
  53          #define CE   8
  54          
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 2   

  55          #define CS   12
  56          #define RST  14
  57          #define RS   13
  58          #define SDA  16
  59          #define CLK  19
  60          #define LED_EN 15
  61          #define note1 NOTE_D4
  62          
  63          #define SMALL_FLY       2
  64          #define BIG_FLY         1
  65          
  66          volatile int idata Last_Thro, Last_Yaw, Last_Pitch, Last_Roll;
  67          volatile int idata Thro, Yaw, Pitch, Roll; //
  68          volatile int idata battery;
  69          unsigned char xdata TxBuf[20] = {0};
  70          u8 xdata RxBuf[20] = {0};
  71          u8 data count;
  72          u8 data count1;
  73          int data Angle_X;
  74          int data Angle_Y;
  75          int xdata Angle_X_temp;
  76          int xdata Angle_Y_temp;
  77          u8 bdata key;
  78          sbit key0 = key ^ 0;
  79          sbit key1 = key ^ 1;
  80          sbit key2 = key ^ 2;
  81          u8 bdata menu_status;
  82          sbit menu_main = menu_status ^ 0;
  83          sbit menu_1 = menu_status ^ 1;
  84          sbit menu_2 = menu_status ^ 2;
  85          sbit menu_3 = menu_status ^ 3;
  86          sbit menu_4 = menu_status ^ 4;
  87          char xdata gb;
  88          u8 bai, shi, ge;
  89          u8 FLY_MODE = 0 ;
  90          
  91          double _data[10] = {0} ;
  92          
  93          u8 flag_once = 1 ;
  94          int count_cls = 0 ;
  95          
  96          // int code melody[] = {
  97          //      NOTE_E4, NOTE_E4, NOTE_E4, NOTE_C4, NOTE_E4, NOTE_G4, NOTE_G3,
  98          //      NOTE_C4, NOTE_G3, NOTE_E3, NOTE_A3, NOTE_B3, NOTE_AS3, NOTE_A3, NOTE_G3, NOTE_E4, NOTE_G4, NOTE_A4,
  99          //      NOTE_F4, NOTE_G4, NOTE_E4, NOTE_C4, NOTE_D4, NOTE_B3,
 100          //      NOTE_C4, NOTE_G3, NOTE_E3, NOTE_A3, NOTE_B3, NOTE_AS3, NOTE_A3, NOTE_G3, NOTE_E4, NOTE_G4, NOTE_A4,
 101          //      NOTE_F4, NOTE_G4, NOTE_E4, NOTE_C4, NOTE_D4, NOTE_B3,
 102          //      NOTE_G4, NOTE_FS4, NOTE_E4, NOTE_DS4, NOTE_E4, NOTE_GS3, NOTE_A3, NOTE_C4, NOTE_A3, NOTE_C4,
 103          //      NOTE_D4, NOTE_G4, NOTE_FS4, NOTE_E4, NOTE_DS4, NOTE_E4, NOTE_C5, NOTE_C5, NOTE_C5,
 104          //      NOTE_G4, NOTE_FS4, NOTE_E4, NOTE_DS4, NOTE_E4, NOTE_GS3, NOTE_A3, NOTE_C4, NOTE_A3, NOTE_C4,
 105          //      NOTE_D4, NOTE_DS4, NOTE_D4, NOTE_C4,
 106          //      NOTE_C4, NOTE_C4, NOTE_C4, NOTE_C4, NOTE_D4, NOTE_E4, NOTE_C4, NOTE_A3, NOTE_G3, NOTE_C4, NOTE_C4,
 107          //      NOTE_C4, NOTE_C4, NOTE_D4, NOTE_E4,
 108          //      NOTE_C4, NOTE_C4, NOTE_C4, NOTE_C4, NOTE_D4, NOTE_E4, NOTE_C4, NOTE_A3, NOTE_G3
 109          // };
 110          
 111          // u8 code noteDurations[] = {
 112          //      8, 4, 4, 8, 4, 2, 2,
 113          //      3, 3, 3, 4, 4, 8, 4, 8, 8, 8, 4, 8, 4, 3, 8, 8, 3,
 114          //      3, 3, 3, 4, 4, 8, 4, 8, 8, 8, 4, 8, 4, 3, 8, 8, 2,
 115          //      8, 8, 8, 4, 4, 8, 8, 4, 8, 8, 3, 8, 8, 8, 4, 4, 4, 8, 2,
 116          //      8, 8, 8, 4, 4, 8, 8, 4, 8, 8, 3, 3, 3, 1,
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 3   

 117          //      8, 4, 4, 8, 4, 8, 4, 8, 2, 8, 4, 4, 8, 4, 1,
 118          //      8, 4, 4, 8, 4, 8, 4, 8, 2
 119          // };
 120          
 121          void printPWM() {
 122   1              int i = 0, ttt ;
 123   1              if ( RxBuf[0]  == 0xAA ) {
 124   2                      // printf( "%d ", RxBuf[0]) ;
 125   2                      for ( i = 0 ; i < 4 ; i++ ) {
 126   3                              ttt = 0 ;
 127   3                              ttt = RxBuf[i * 2 + 2] & 0xFFFF;
 128   3                              ttt = ttt << 8 | RxBuf[i * 2 + 1];
 129   3                              // printf( "%d ", ttt) ;
 130   3                              _data[i] = ttt;
 131   3                      }
 132   2                      // printf( "\n", TxBuf[9]);
 133   2              }
 134   1              memset(RxBuf, 0, 20) ;
 135   1      }
 136          
 137          void showChoice() {
 138   1              if ( FLY_MODE == SMALL_FLY )
 139   1                      display_string_8x16(1, 120, "S");
 140   1              if ( FLY_MODE == BIG_FLY )
 141   1                      display_string_8x16(1, 120, "B");
 142   1      }
 143          
 144          void printACC() {
 145   1              int i = 0, ttt ;
 146   1              if ( RxBuf[0]  == 0xAB ) {
 147   2                      // printf( "%d ", RxBuf[0]) ;
 148   2                      for ( i = 0 ; i < 3 ; i++ ) {
 149   3                              ttt = 0 ;
 150   3                              ttt = RxBuf[i * 2 + 2] & 0xFFFF;
 151   3                              ttt = ttt << 8 | RxBuf[i * 2 + 1];
 152   3                              // printf( "%f ", (float)ttt/100) ;
 153   3                              _data[i] = (double)ttt/10 ;
 154   3                      }
 155   2                      _data[i] = RxBuf[i * 2 + 1] ;
 156   2                      // printf( "\n", TxBuf[9]);
 157   2              }
 158   1              for ( i = 0 ; i < 20 ; i++ ) RxBuf[i] = 0 ;
 159   1      }
 160          
 161          void printGYO() {
 162   1              int i = 0, ttt ;
 163   1              if ( RxBuf[0]  == 0xAC ) {
 164   2                      // printf( "%d ", RxBuf[0]) ;
 165   2                      for ( i = 0 ; i < 3 ; i++ ) {
 166   3                              ttt = 0 ;
 167   3                              ttt = RxBuf[i * 2 + 2] & 0xFFFF;
 168   3                              ttt = ttt << 8 | RxBuf[i * 2 + 1];
 169   3                              // printf( "%f ", (float)ttt/100) ;
 170   3                              _data[i] = ttt ;
 171   3                      }
 172   2                      // printf( "\n", TxBuf[9]);
 173   2              }
 174   1              for ( i = 0 ; i < 20 ; i++ ) RxBuf[i] = 0 ;
 175   1      }
 176          
 177          void ShowData_menu(u8 choice)
 178          {
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 4   

 179   1              char tmp[11] = {0} ;
 180   1              int i = 0 ;
 181   1              int count = 0 ;
 182   1      
 183   1              showChoice() ;
 184   1              if ( count_cls == 200 ) {
 185   2                      clear_screen() ;
 186   2                      count_cls = 0 ;
 187   2              }
 188   1              count_cls++ ;
 189   1              
 190   1              if ( choice == 0 ) {
 191   2                      display_string_8x16(1, 5, "Ax:"); /*在第3 页，第10 列显示字符串*/
 192   2                      display_string_8x16(3, 5, "Ay:"); /*在第5 页，第10 列显示字符串*/
 193   2                      display_string_8x16(5, 5, "Az:"); /*在第5 页，第10 列显示字符串*/
 194   2                      display_string_8x16(7, 5, "Ht:"); /*在第5 页，第10 列显示字符串*/
 195   2                      count = 4 ;
 196   2              } else if ( choice == 1 ) {
 197   2                      display_string_8x16(1, 5, "Gx:"); /*在第3 页，第10 列显示字符串*/
 198   2                      display_string_8x16(3, 5, "Gy:"); /*在第5 页，第10 列显示字符串*/
 199   2                      display_string_8x16(5, 5, "Gz:"); /*在第5 页，第10 列显示字符串*/
 200   2                      count = 3 ;
 201   2              } else if ( choice == 2 ) {
 202   2                      display_string_8x16(1, 5, "F:"); /*在第3 页，第10 列显示字符串*/
 203   2                      display_string_8x16(3, 5, "R:"); /*在第5 页，第10 列显示字符串*/
 204   2                      display_string_8x16(5, 5, "B:"); /*在第5 页，第10 列显示字符串*/
 205   2                      display_string_8x16(7, 5, "L:"); /*在第5 页，第10 列显示字符串*/
 206   2                      count = 4 ;
 207   2              }
 208   1      
 209   1              for ( i = 0 ; i < count ; i++ ) {
 210   2                      sprintf( tmp, "%8.2f", _data[i]) ;
 211   2                      display_string_8x16(1 + i * 2, 30, tmp) ;
 212   2                      memset(tmp, 0, 11) ;
 213   2              }
 214   1      }
 215          
 216          void ShowStatus_menu(int Thro, int Yaw, int Pitch, int Roll )
 217          {
 218   1              char tmp[4] = {0} ;
 219   1      
 220   1              showChoice() ;
 221   1              display_string_8x16(1, 10, "Thro :"); /*在第3 页，第10 列显示字符串*/
 222   1              display_string_8x16(3, 10, "Yaw  :"); /*在第5 页，第10 列显示字符串*/
 223   1              display_string_8x16(5, 10, "Pitch:"); /*在第5 页，第10 列显示字符串*/
 224   1              display_string_8x16(7, 10, "Roll :"); /*在第5 页，第10 列显示字符串*/
 225   1      
 226   1              sprintf( tmp, "%3d", Thro) ;
 227   1              display_string_8x16(1, 68, tmp) ;
 228   1              memset(tmp, 0, 4) ;
 229   1      
 230   1              sprintf( tmp, "%3d", Yaw) ;
 231   1              display_string_8x16(3, 68, tmp) ;
 232   1              memset(tmp, 0, 4) ;
 233   1      
 234   1              sprintf( tmp, "%3d", Pitch) ;
 235   1              display_string_8x16(5, 68, tmp) ;
 236   1              memset(tmp, 0, 4) ;
 237   1      
 238   1              sprintf( tmp, "%3d", Roll) ;
 239   1              display_string_8x16(7, 68, tmp) ;
 240   1              memset(tmp, 0, 4) ;
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 5   

 241   1      
 242   1      }
 243          
 244          void ShowThroAtten() {
 245   1              display_string_8x16(1, 5, "---------------");
 246   1              display_string_8x16(3, 5, "   PULL DOWN   "); /*在第4 页，第16 列显示字符串*/
 247   1              display_string_8x16(5, 5, "     THRO      ");
 248   1              display_string_8x16(7, 5, "---------------");
 249   1      
 250   1      }
 251          
 252          void ShowWait() {
 253   1              display_string_8x16(1, 5, "---------------");
 254   1              display_string_8x16(3, 5, "     PLEASE    "); /*在第4 页，第16 列显示字符串*/
 255   1              display_string_8x16(5, 5, "      WAIT     ");
 256   1              display_string_8x16(7, 5, "---------------");
 257   1      
 258   1      }
 259          
 260          void ShowLogo() {
 261   1              clear_screen();
 262   1              display_string_8x16(1, 5, "---------------");
 263   1              display_string_8x16(3, 5, "    WELCOME    "); /*在第4 页，第16 列显示字符串*/
 264   1              display_string_8x16(5, 5, "      CNU      ");
 265   1              display_string_8x16(7, 5, "---------------");
 266   1      }
 267          
 268          void main_menu()
 269          {
 270   1              showChoice() ;
 271   1              display_string_8x16(1, 20, "Remote");
 272   1              display_string_8x16(3, 20, "Gyro");
 273   1              display_string_8x16(5, 20, "Accelate");
 274   1              display_string_8x16(7, 20, "PWM");
 275   1      }
 276          
 277          void choose_menu()
 278          {
 279   1              display_string_8x16(1, 20, "CHOOSE MODE");
 280   1              display_string_8x16(3, 20, "*Big   Mode");
 281   1              display_string_8x16(5, 20, "*Small Mode");
 282   1      }
 283          
 284          void menu_choose() {
 285   1              if (menu_main == 1) {
 286   2                      main_menu();
 287   2                      key0 = !digitalRead(24);
 288   2                      key1 = !digitalRead(25);
 289   2                      key2 = !digitalRead(26);
 290   2                      switch (key) {
 291   3                      case 3 ://s8被按下（上）
 292   3                              clear_gb(gb);
 293   3                              if (gb != 1)gb = gb - 2;
 294   3                              display_gb(gb);
 295   3                              while ((key && 0x03) != 0)
 296   3                              {
 297   4                                      key0 = !digitalRead(24);
 298   4                                      key1 = !digitalRead(25);
 299   4                              }
 300   3                              break;
 301   3                      case 4 :                        //s11被按下（确定）
 302   3                              menu_status = 1 << ((gb + 1) / 2);
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 6   

 303   3                              clear_screen();
 304   3                              break;
 305   3                      case 6 :                        //s10被按下（下）
 306   3                              clear_gb(gb);
 307   3                              if (gb != 7)gb = gb + 2;
 308   3                              display_gb(gb);
 309   3                              while ((key && 0x06) != 0) {
 310   4                                      key1 = !digitalRead(25);
 311   4                                      key2 = !digitalRead(26);
 312   4                              }
 313   3                              break;
 314   3                      default:        display_gb(gb);
 315   3                              break;
 316   3                      }
 317   2              } else if (menu_1 == 1) {
 318   2                      ShowStatus_menu( TxBuf[4], TxBuf[3], TxBuf[1], TxBuf[2] );
 319   2                      key0 = !digitalRead(24);
 320   2                      key1 = !digitalRead(25);
 321   2                      key2 = !digitalRead(26);
 322   2                      switch (key) {
 323   3                      case 5:
 324   3                              menu_status = 0x01;
 325   3                              clear_screen();
 326   3                              break;
 327   3                      default:
 328   3                              break;
 329   3                      }
 330   2              } else if (menu_2 == 1) {
 331   2                      printACC() ;
 332   2                      ShowData_menu(0) ;
 333   2                      key0 = !digitalRead(24);
 334   2                      key1 = !digitalRead(25);
 335   2                      key2 = !digitalRead(26);
 336   2                      switch (key) {
 337   3                      case 5:
 338   3                              menu_status = 0x01;
 339   3                              clear_screen();
 340   3                              break;
 341   3                      default:
 342   3                              break;
 343   3                      }
 344   2              } else if (menu_3 == 1) {
 345   2                      printGYO() ;
 346   2                      ShowData_menu(1) ;
 347   2                      key0 = !digitalRead(24);
 348   2                      key1 = !digitalRead(25);
 349   2                      key2 = !digitalRead(26);
 350   2                      switch (key) {
 351   3                      case 5:
 352   3                              menu_status = 0x01;
 353   3                              clear_screen();
 354   3                              break;
 355   3                      default:
 356   3                              break;
 357   3                      }
 358   2              } else if (menu_4 == 1) {
 359   2                      printPWM() ;
 360   2                      ShowData_menu(2) ;
 361   2                      key0 = !digitalRead(24);
 362   2                      key1 = !digitalRead(25);
 363   2                      key2 = !digitalRead(26);
 364   2                      switch (key) {
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 7   

 365   3                      case 5:
 366   3                              menu_status = 0x01;
 367   3                              clear_screen();
 368   3                              break;
 369   3                      default:
 370   3                              break;
 371   3                      }
 372   2              } 
 373   1      }
 374          
 375          void choose_mode() {
 376   1              if (menu_main == 1)
 377   1              {
 378   2                      choose_menu();
 379   2                      key0 = !digitalRead(24);
 380   2                      key1 = !digitalRead(25);
 381   2                      key2 = !digitalRead(26);
 382   2                      switch (key)
 383   2                      {
 384   3                      case 3 :
 385   3                              // shang
 386   3                              clear_gb(gb);
 387   3                              if (gb != 3) gb = gb - 2;
 388   3                              display_gb(gb);
 389   3                              while ((key && 0x03) != 0) {
 390   4                                      key0 = !digitalRead(24);
 391   4                                      key1 = !digitalRead(25);
 392   4                              }
 393   3                              break;
 394   3                      case 4 :
 395   3                              // queding
 396   3                              menu_status = 1 << ((gb + 1) / 2);
 397   3                              clear_screen();
 398   3                              break;
 399   3                      case 6 :
 400   3                              // xia
 401   3                              clear_gb(gb);
 402   3                              if (gb != 5)gb = gb + 2;
 403   3                              display_gb(gb);
 404   3                              while ((key && 0x06) != 0) {
 405   4                                      key1 = !digitalRead(25);
 406   4                                      key2 = !digitalRead(26);
 407   4                              }
 408   3                              break;
 409   3                      default:
 410   3                              display_gb(gb);
 411   3                              break;
 412   3                      }
 413   2      
 414   2              }
 415   1              if (menu_2 == 1) {
 416   2                      FLY_MODE = BIG_FLY ; // 大四轴
 417   2                      TxBuf[7] = FLY_MODE ;
 418   2                      delay_ms(50) ;
 419   2              }
 420   1              if (menu_3 == 1) {
 421   2                      FLY_MODE = SMALL_FLY ; // 小四轴
 422   2                      TxBuf[7] = FLY_MODE ;
 423   2                      delay_ms(50) ;
 424   2              }
 425   1      }
 426          
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 8   

 427          void pinINIT() {
 428   1              Serialbegin(2400, 1, COM1); //初始化串口1，波特率为2400，必须和STC-ISP最低波特率保持一致才能实现自动下载
 429   1              pinMode(IRQ, pullup);
 430   1              pinMode(MISO, pullup);
 431   1              pinMode(MOSI, pullup);
 432   1              pinMode(SCK, pullup);
 433   1              pinMode(CSN, pullup);
 434   1              pinMode(CE, pullup);
 435   1      
 436   1              SPIsetGroup(SPI_P54_P40_P41_P43);
 437   1              SPIsetDataMode(SPI_MODE3);
 438   1              SPIbegin();
 439   1              SPIsetBitOrder(MSBFIRST);
 440   1              SPIsetClockDivider(SPI_CLOCK_DIV8);
 441   1      
 442   1              pinMode(redled, OutPP); //IO口工作模式：OutPP（推挽）、pullup（内部上拉）、highz（高阻）、openD（开漏）
 443   1              pinMode(blueled, OutPP);
 444   1              pinMode(LKEY, pullup);
 445   1              pinMode(RKEY, pullup);
 446   1      
 447   1              pinMode(Forward, pullup);
 448   1              pinMode(Backward, pullup);
 449   1              pinMode(Left, pullup);
 450   1              pinMode(Right, pullup);
 451   1      
 452   1              pinMode(CS, pullup);
 453   1              pinMode(RST, pullup);
 454   1              pinMode(RS, pullup);
 455   1              pinMode(SDA, pullup);
 456   1              pinMode(CLK, pullup);
 457   1              pinMode(LED_EN, pullup);
 458   1      
 459   1      
 460   1              pinMode(A0, highz); //左杆上下
 461   1              pinMode(A1, highz); //左杆左右
 462   1              pinMode(A2, highz); //右杆上下
 463   1              pinMode(A3, highz); //右杆左右
 464   1              pinMode(A4, highz); //电池电压采样
 465   1      
 466   1              pinMode(24, pullup);
 467   1              pinMode(25, pullup);
 468   1              pinMode(26, pullup); // P35
 469   1      
 470   1              pinMode(5, pullup); // P36
 471   1              pinMode(6, pullup); // P37
 472   1              pinMode(7, pullup);
 473   1      
 474   1              init_NRF24L01();  //初始化无线模块
 475   1      }
 476          
 477          void smalladjust() {
 478   1              // 陀螺仪微调
 479   1              // 前微调
 480   1              if (digitalRead(Forward) == 0) {
 481   2                      // Last_Pitch-- ;
 482   2                      TxBuf[7] = 3 ;
 483   2                      tone(4, note1);
 484   2                      while (!digitalRead(Forward));
 485   2                      noTone(4);
 486   2              } else TxBuf[7] = 0 ;
 487   1              //后微调
 488   1              if (digitalRead(Backward) == 0) {
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 9   

 489   2                      // Last_Pitch++ ;
 490   2                      TxBuf[7] = 4 ;
 491   2                      tone(4, note1);
 492   2                      while (!digitalRead(Backward));
 493   2                      noTone(4);
 494   2              } else TxBuf[7] = 0 ;
 495   1              //左微调
 496   1              if (digitalRead(Left) == 0) {
 497   2                      // Last_Roll--;
 498   2                      TxBuf[7] = 5 ;
 499   2                      tone(4, note1);
 500   2                      while (!digitalRead(Left));
 501   2                      noTone(4);
 502   2              } else TxBuf[7] = 0 ;
 503   1              //右微调
 504   1              if (digitalRead(Right) == 0) {
 505   2                      // Last_Roll++;
 506   2                      TxBuf[7] = 6 ;
 507   2                      tone(4, note1);
 508   2                      while (!digitalRead(Right));
 509   2                      noTone(4);
 510   2              } else TxBuf[7] = 0 ;
 511   1      
 512   1              key0 = !digitalRead(5);
 513   1              key1 = !digitalRead(6);
 514   1              key2 = !digitalRead(7);
 515   1              // 加速度计微调
 516   1              switch ( key ) {
 517   2                      // shang
 518   2                      case 3:
 519   2                              TxBuf[7] = 7 ;
 520   2                              while ((key && 0x03) != 0) {
 521   3                                      key0 = !digitalRead(5);
 522   3                                      key1 = !digitalRead(6);
 523   3                              }
 524   2                      break;
 525   2                      // xia
 526   2                      case 6:
 527   2                              TxBuf[7] = 8 ;
 528   2                              while ((key && 0x06) != 0) {
 529   3                                      key1 = !digitalRead(6);
 530   3                                      key2 = !digitalRead(7);
 531   3                              }
 532   2                      break;
 533   2                      // zuo
 534   2                      case 1:
 535   2                              TxBuf[7] = 9 ;
 536   2                              while ((key && 0x01) != 0) {
 537   3                                      key0 = !digitalRead(5);
 538   3                              }
 539   2                      break;
 540   2                      // you
 541   2                      case 2:
 542   2                              TxBuf[7] = 10 ;
 543   2                              while ((key && 0x02) != 0) {
 544   3                                      key0 = !digitalRead(5);
 545   3                                      key1 = !digitalRead(6);
 546   3                              }
 547   2                      break;
 548   2                      default:
 549   2                              TxBuf[7] = 0 ;
 550   2              }
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 10  

 551   1      }
 552          
 553          void main()
 554          {
 555   1              pinINIT() ;
 556   1      
 557   1              //**************************************************
 558   1              initial_lcd();
 559   1              ShowLogo();
 560   1              delay_ms(2000);
 561   1              clear_screen(); 
 562   1      
 563   1              //****************************************************
 564   1              Last_Yaw = analogRead(0) / 4 - 128;
 565   1              Last_Pitch = analogRead(3) / 4 - 128;
 566   1              Last_Roll = analogRead(2) / 4 - 128;
 567   1              setHighPolity(TIMER0);
 568   1              Timer0_attachInterrupt(5000);
 569   1              
 570   1              //**************************************************
 571   1              // 模式选择
 572   1              menu_status = 1;
 573   1              gb = 3;
 574   1              while (!FLY_MODE) {
 575   2                      choose_mode() ;
 576   2              }
 577   1              // 复位
 578   1              menu_status = 1;
 579   1              gb = 1;
 580   1      
 581   1              //**************************************************
 582   1              // 等待acc校准
 583   1              // while ( TxBuf[0] != 0xCC ) {
 584   1              //      digitalWrite(redled, low);
 585   1              //      ShowWait() ;
 586   1              // }
 587   1              // digitalWrite(redled, high);
 588   1      
 589   1              // 主循环程序
 590   1              while (1) {
 591   2      
 592   2                      Thro = analogRead(1) / 4;
 593   2                      Yaw = analogRead(0) / 4;
 594   2                      Pitch = analogRead(3) / 4;
 595   2                      Roll = analogRead(2) / 4;
 596   2                      battery = analogRead(4);
 597   2      
 598   2                      if (battery <= 574) {
 599   3                              digitalWrite(redled, high);
 600   3                              digitalWrite(blueled, low);
 601   3                      } else {
 602   3                              digitalWrite(redled, low);
 603   3                              digitalWrite(blueled, high);
 604   3                      }
 605   2      
 606   2                      TxBuf[0]++;
 607   2                      TxBuf[1] = 128;
 608   2                      TxBuf[2] = 128;
 609   2                      TxBuf[3] = 128;
 610   2      
 611   2                      ShowThroAtten() ;
 612   2      
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 11  

 613   2                      // 保护程序
 614   2                      if (Thro < 20) {
 615   3      
 616   3                              if ( flag_once ) {
 617   4                                      clear_screen();
 618   4                                      flag_once = 0 ;
 619   4                              }
 620   3      
 621   3                              while (1) {
 622   4                                      Thro = analogRead(1) / 4; //读取4个摇杆通道每个通道的8位数据，取值范围0-255
 623   4                                      Yaw = analogRead(0) / 4;
 624   4                                      Pitch = analogRead(3) / 4;
 625   4                                      Roll = analogRead(2) / 4;
 626   4                                      battery = analogRead(4); //电池电压检测通道 低于3.7V亮红灯
 627   4      
 628   4                                      // 主菜单功能选择
 629   4                                      menu_choose() ;
 630   4      
 631   4                                      if (battery <= 574)
 632   4                                              digitalWrite(blueled, high);
 633   4                                      else if (battery >= 584)
 634   4                                              digitalWrite(blueled, low);
 635   4      
 636   4                                      // 油门：TxBuf[4]
 637   4                                      // 自旋：TxBuf[3]
 638   4                                      // 俯仰：TxBuf[1]
 639   4                                      // 横滚：TxBuf[2]
 640   4                                      if ((Pitch - Last_Pitch) >= 255) {TxBuf[1] = 255;}
 641   4                                      else if ((Pitch - Last_Pitch) <= 0) {TxBuf[1] = 0;}
 642   4                                      else {TxBuf[1] = Pitch - Last_Pitch;}
 643   4      
 644   4                                      if ((Roll - Last_Roll) >= 255) {TxBuf[2] = 255;}
 645   4                                      else if ((Roll - Last_Roll) <= 0) {TxBuf[2] = 0;}
 646   4                                      else {TxBuf[2] = Roll - Last_Roll;}
 647   4      
 648   4                                      if ((Yaw - Last_Yaw) >= 255) {TxBuf[3] = 255;}
 649   4                                      else if ((Yaw - Last_Yaw) <= 0) {TxBuf[3] = 0;}
 650   4                                      else {TxBuf[3] = Yaw - Last_Yaw;}
 651   4                                      
 652   4                                      TxBuf[4] = Thro;
 653   4      
 654   4                                      // 一键刹车
 655   4                                      if (digitalRead(RKEY) == 0) {
 656   5                                              tone(4, note1);
 657   5                                              TxBuf[5] = 1;
 658   5                                              while (!digitalRead(RKEY));
 659   5                                              noTone(4);
 660   5                                      } else TxBuf[5] = 0;
 661   4      
 662   4                                      //
 663   4                                      if (digitalRead(LKEY) == 0) {
 664   5                                              tone(4, note1);
 665   5                                              TxBuf[6] = 1;
 666   5                                              while (!digitalRead(LKEY));
 667   5                                              noTone(4);
 668   5                                      } else TxBuf[6] = 0;
 669   4      
 670   4                                      //手动校准静置角度
 671   4                                      smalladjust() ;
 672   4      
 673   4                                      TxBuf[0]++;
 674   4                              }
C51 COMPILER V9.52.0.0   DEMO                                                              09/21/2015 00:52:50 PAGE 12  

 675   3                      }
 676   2              }
 677   1      }
 678          
 679          void timer0_int (void) interrupt TIMER0_VECTOR {
 680   1              u8 n;
 681   1              count++;
 682   1              if (count == 1) {
 683   2                      TxBuf[9] = 0;
 684   2                      for (n = 0; n < 9; n++)
 685   2                              TxBuf[9] = TxBuf[9] + TxBuf[n];
 686   2                      nRF24L01_TxPacket(TxBuf);//发射数据
 687   2              }
 688   1              else if (count == 2) SetRX_Mode();
 689   1              else if (count == 3) {
 690   2                      count1++;
 691   2                      nRF24L01_RxPacket(RxBuf);//接收数据
 692   2                      if (count1 == 128) count1 = 0;
 693   2                      count = 0;
 694   2              }
 695   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4350    ----
   CONSTANT SIZE    =    270    ----
   XDATA SIZE       =     92      40
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =     18    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
